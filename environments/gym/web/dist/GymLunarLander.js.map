{
  "version": 3,
  "sources": ["../GymLunarLander.jsx"],
  "sourcesContent": ["// Copyright 2023 AI Redefined Inc. <dev+cogment@ai-r.com>\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport React, { useCallback, useState } from \"react\";\nimport {\n  useDocumentKeypressListener,\n  usePressedKeys,\n  PlayObserver,\n  useRealTimeUpdate,\n  TEACHER_ACTOR_CLASS,\n  OBSERVER_ACTOR_CLASS,\n  DPad,\n  useDPadPressedButtons,\n  DPAD_BUTTONS,\n  Button,\n  FpsCounter,\n  KeyboardControlList,\n  serializePlayerAction,\n  TEACHER_NOOP_ACTION,\n  Space,\n  SimplePlay,\n} from \"@cogment/cogment-verse\";\n\nconst DEACTIVATED_BUTTONS_TEACHER = [];\nconst DEACTIVATED_BUTTONS_PLAYER = [DPAD_BUTTONS.UP];\n\nconst ACTION_SPACE = new Space({\n  discrete: {\n    n: 4,\n  },\n});\n\nconst GymLunarLanderControls = ({ sendAction, fps = 20, actorParams, ...props }) => {\n  const actorClassName = actorParams?.className;\n\n  const isTeacher = actorClassName === TEACHER_ACTOR_CLASS;\n  const [paused, setPaused] = useState(false);\n  const togglePause = useCallback(() => setPaused((paused) => !paused), [setPaused]);\n  useDocumentKeypressListener(\"p\", togglePause);\n\n  const pressedKeys = usePressedKeys();\n  const { pressedButtons, isButtonPressed, setPressedButtons } = useDPadPressedButtons();\n  const [activeButtons, setActiveButtons] = useState([]);\n\n  const computeAndSendAction = useCallback(\n    (dt) => {\n      if (pressedKeys.has(\"ArrowRight\") || isButtonPressed(DPAD_BUTTONS.RIGHT)) {\n        setActiveButtons([DPAD_BUTTONS.RIGHT]);\n        sendAction(serializePlayerAction(ACTION_SPACE, 1));\n        return;\n      } else if (pressedKeys.has(\"ArrowDown\") || isButtonPressed(DPAD_BUTTONS.DOWN)) {\n        setActiveButtons([DPAD_BUTTONS.DOWN]);\n        sendAction(serializePlayerAction(ACTION_SPACE, 2));\n        return;\n      } else if (pressedKeys.has(\"ArrowLeft\") || isButtonPressed(DPAD_BUTTONS.LEFT)) {\n        setActiveButtons([DPAD_BUTTONS.LEFT]);\n        sendAction(serializePlayerAction(ACTION_SPACE, 3));\n        return;\n      } else if (isTeacher) {\n        if (pressedKeys.has(\"ArrowUp\") || isButtonPressed(DPAD_BUTTONS.UP)) {\n          setActiveButtons([DPAD_BUTTONS.UP]);\n          sendAction(serializePlayerAction(ACTION_SPACE, 0));\n          return;\n        }\n        setActiveButtons([]);\n        sendAction(TEACHER_NOOP_ACTION);\n        return;\n      }\n      setActiveButtons([]);\n      sendAction(serializePlayerAction(ACTION_SPACE, 0));\n    },\n    [isButtonPressed, pressedKeys, sendAction, setActiveButtons, isTeacher]\n  );\n\n  const { currentFps } = useRealTimeUpdate(computeAndSendAction, fps, paused);\n\n  return (\n    <div {...props}>\n      <div className=\"flex flex-row p-5 justify-center\">\n        <DPad\n          pressedButtons={pressedButtons}\n          onPressedButtonsChange={setPressedButtons}\n          activeButtons={activeButtons}\n          disabled={paused || (isTeacher ? DEACTIVATED_BUTTONS_TEACHER : DEACTIVATED_BUTTONS_PLAYER)}\n        />\n      </div>\n      <div className=\"flex flex-row gap-1\">\n        <Button className=\"flex-1\" onClick={togglePause}>\n          {paused ? \"Resume\" : \"Pause\"}\n        </Button>\n        <FpsCounter className=\"flex-none w-fit\" value={currentFps} />\n      </div>\n      <KeyboardControlList\n        items={[\n          [\"Left/Right Arrows\", \"Fire left/right engine\"],\n          [\"Down Arrow\", \"Fire the main engine\"],\n          isTeacher ? [\"Up Arrow\", \"turn off engine\"] : null,\n          [\"p\", \"Pause/Unpause\"],\n        ]}\n      />\n    </div>\n  );\n};\n\nconst PlayGymLunarLander = ({ actorParams, ...props }) => {\n  const actorClassName = actorParams?.className;\n\n  if (actorClassName === OBSERVER_ACTOR_CLASS) {\n    return <PlayObserver actorParams={actorParams} {...props} />;\n  }\n  return <SimplePlay actorParams={actorParams} {...props} controls={GymLunarLanderControls} />;\n};\n\nexport default PlayGymLunarLander;\n"],
  "mappings": "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",
  "names": ["useCallback", "useState", "useDocumentKeypressListener", "usePressedKeys", "PlayObserver", "useRealTimeUpdate", "TEACHER_ACTOR_CLASS", "OBSERVER_ACTOR_CLASS", "DPad", "useDPadPressedButtons", "DPAD_BUTTONS", "Button", "FpsCounter", "KeyboardControlList", "serializePlayerAction", "TEACHER_NOOP_ACTION", "Space", "SimplePlay", "jsx", "jsxs", "DEACTIVATED_BUTTONS_TEACHER", "DEACTIVATED_BUTTONS_PLAYER", "ACTION_SPACE", "GymLunarLanderControls", "sendAction", "fps", "actorParams", "props", "isTeacher", "paused", "setPaused", "togglePause", "pressedKeys", "pressedButtons", "isButtonPressed", "setPressedButtons", "activeButtons", "setActiveButtons", "computeAndSendAction", "dt", "currentFps", "PlayGymLunarLander", "GymLunarLander_default"]
}
