{
  "version": 3,
  "sources": ["../GymLunarLander.jsx"],
  "sourcesContent": ["// Copyright 2023 AI Redefined Inc. <dev+cogment@ai-r.com>\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { useCallback, useState } from \"react\";\nimport { useDocumentKeypressListener, usePressedKeys } from \"@cogment/cogment-verse\";\nimport { useRealTimeUpdate } from \"@cogment/cogment-verse\";\nimport { TEACHER_ACTOR_CLASS } from \"@cogment/cogment-verse\";\nimport { DPad, useDPadPressedButtons, DPAD_BUTTONS } from \"@cogment/cogment-verse\";\nimport { Button } from \"@cogment/cogment-verse\";\nimport { FpsCounter } from \"@cogment/cogment-verse\";\nimport { KeyboardControlList } from \"@cogment/cogment-verse\";\nimport { serializePlayerAction, TEACHER_NOOP_ACTION, Space } from \"@cogment/cogment-verse\";\nimport { Play } from \"@cogment/cogment-verse\";\n\nconst DEACTIVATED_BUTTONS_TEACHER = [];\nconst DEACTIVATED_BUTTONS_PLAYER = [DPAD_BUTTONS.UP];\n\nconst ACTION_SPACE = new Space({\n  discrete: {\n    n: 4,\n  },\n});\n\nconst Controls = ({ sendAction, fps = 20, actorClass, ...props }) => {\n  const isTeacher = actorClass === TEACHER_ACTOR_CLASS;\n  const [paused, setPaused] = useState(false);\n  const togglePause = useCallback(() => setPaused((paused) => !paused), [setPaused]);\n  useDocumentKeypressListener(\"p\", togglePause);\n\n  const pressedKeys = usePressedKeys();\n  const { pressedButtons, isButtonPressed, setPressedButtons } = useDPadPressedButtons();\n  const [activeButtons, setActiveButtons] = useState([]);\n\n  const computeAndSendAction = useCallback(\n    (dt) => {\n      if (pressedKeys.has(\"ArrowRight\") || isButtonPressed(DPAD_BUTTONS.RIGHT)) {\n        setActiveButtons([DPAD_BUTTONS.RIGHT]);\n        sendAction(serializePlayerAction(ACTION_SPACE, 1));\n        return;\n      } else if (pressedKeys.has(\"ArrowDown\") || isButtonPressed(DPAD_BUTTONS.DOWN)) {\n        setActiveButtons([DPAD_BUTTONS.DOWN]);\n        sendAction(serializePlayerAction(ACTION_SPACE, 2));\n        return;\n      } else if (pressedKeys.has(\"ArrowLeft\") || isButtonPressed(DPAD_BUTTONS.LEFT)) {\n        setActiveButtons([DPAD_BUTTONS.LEFT]);\n        sendAction(serializePlayerAction(ACTION_SPACE, 3));\n        return;\n      } else if (isTeacher) {\n        if (pressedKeys.has(\"ArrowUp\") || isButtonPressed(DPAD_BUTTONS.UP)) {\n          setActiveButtons([DPAD_BUTTONS.UP]);\n          sendAction(serializePlayerAction(ACTION_SPACE, 0));\n          return;\n        }\n        setActiveButtons([]);\n        sendAction(TEACHER_NOOP_ACTION);\n        return;\n      }\n      setActiveButtons([]);\n      sendAction(serializePlayerAction(ACTION_SPACE, 0));\n    },\n    [isButtonPressed, pressedKeys, sendAction, setActiveButtons, isTeacher]\n  );\n\n  const { currentFps } = useRealTimeUpdate(computeAndSendAction, fps, paused);\n\n  return (\n    <div {...props}>\n      <div className=\"flex flex-row p-5 justify-center\">\n        <DPad\n          pressedButtons={pressedButtons}\n          onPressedButtonsChange={setPressedButtons}\n          activeButtons={activeButtons}\n          disabled={paused || (isTeacher ? DEACTIVATED_BUTTONS_TEACHER : DEACTIVATED_BUTTONS_PLAYER)}\n        />\n      </div>\n      <div className=\"flex flex-row gap-1\">\n        <Button className=\"flex-1\" onClick={togglePause}>\n          {paused ? \"Resume\" : \"Pause\"}\n        </Button>\n        <FpsCounter className=\"flex-none w-fit\" value={currentFps} />\n      </div>\n      <KeyboardControlList\n        items={[\n          [\"Left/Right Arrows\", \"Fire left/right engine\"],\n          [\"Down Arrow\", \"Fire the main engine\"],\n          isTeacher ? [\"Up Arrow\", \"turn off engine\"] : null,\n          [\"p\", \"Pause/Unpause\"],\n        ]}\n      />\n    </div>\n  );\n};\n\nconst PlayGymLunarLander = (props) => {\n  return <Play {...props} controls={Controls} />;\n};\n\nexport default PlayGymLunarLander;\n"],
  "mappings": "AAcA,OAAS,eAAAA,EAAa,YAAAC,MAAgB,QACtC,OAAS,+BAAAC,EAA6B,kBAAAC,MAAsB,yBAC5D,OAAS,qBAAAC,MAAyB,yBAClC,OAAS,uBAAAC,MAA2B,yBACpC,OAAS,QAAAC,EAAM,yBAAAC,EAAuB,gBAAAC,MAAoB,yBAC1D,OAAS,UAAAC,MAAc,yBACvB,OAAS,cAAAC,MAAkB,yBAC3B,OAAS,uBAAAC,MAA2B,yBACpC,OAAS,yBAAAC,EAAuB,uBAAAC,EAAqB,SAAAC,MAAa,yBAClE,OAAS,QAAAC,MAAY,yBAwDb,cAAAC,EAOF,QAAAC,MAPE,oBAtDR,IAAMC,EAA8B,CAAC,EAC/BC,EAA6B,CAACX,EAAa,EAAE,EAE7CY,EAAe,IAAIN,EAAM,CAC7B,SAAU,CACR,EAAG,CACL,CACF,CAAC,EAEKO,EAAW,CAAC,CAAE,WAAAC,EAAY,IAAAC,EAAM,GAAI,WAAAC,EAAY,GAAGC,CAAM,IAAM,CACnE,IAAMC,EAAYF,IAAenB,EAC3B,CAACsB,EAAQC,CAAS,EAAI3B,EAAS,EAAK,EACpC4B,EAAc7B,EAAY,IAAM4B,EAAWD,GAAW,CAACA,CAAM,EAAG,CAACC,CAAS,CAAC,EACjF1B,EAA4B,IAAK2B,CAAW,EAE5C,IAAMC,EAAc3B,EAAe,EAC7B,CAAE,eAAA4B,EAAgB,gBAAAC,EAAiB,kBAAAC,CAAkB,EAAI1B,EAAsB,EAC/E,CAAC2B,EAAeC,CAAgB,EAAIlC,EAAS,CAAC,CAAC,EAE/CmC,EAAuBpC,EAC1BqC,GAAO,CACN,GAAIP,EAAY,IAAI,YAAY,GAAKE,EAAgBxB,EAAa,KAAK,EAAG,CACxE2B,EAAiB,CAAC3B,EAAa,KAAK,CAAC,EACrCc,EAAWV,EAAsBQ,EAAc,CAAC,CAAC,EACjD,eACSU,EAAY,IAAI,WAAW,GAAKE,EAAgBxB,EAAa,IAAI,EAAG,CAC7E2B,EAAiB,CAAC3B,EAAa,IAAI,CAAC,EACpCc,EAAWV,EAAsBQ,EAAc,CAAC,CAAC,EACjD,eACSU,EAAY,IAAI,WAAW,GAAKE,EAAgBxB,EAAa,IAAI,EAAG,CAC7E2B,EAAiB,CAAC3B,EAAa,IAAI,CAAC,EACpCc,EAAWV,EAAsBQ,EAAc,CAAC,CAAC,EACjD,eACSM,EAAW,CACpB,GAAII,EAAY,IAAI,SAAS,GAAKE,EAAgBxB,EAAa,EAAE,EAAG,CAClE2B,EAAiB,CAAC3B,EAAa,EAAE,CAAC,EAClCc,EAAWV,EAAsBQ,EAAc,CAAC,CAAC,EACjD,OAEFe,EAAiB,CAAC,CAAC,EACnBb,EAAWT,CAAmB,EAC9B,OAEFsB,EAAiB,CAAC,CAAC,EACnBb,EAAWV,EAAsBQ,EAAc,CAAC,CAAC,CACnD,EACA,CAACY,EAAiBF,EAAaR,EAAYa,EAAkBT,CAAS,CACxE,EAEM,CAAE,WAAAY,CAAW,EAAIlC,EAAkBgC,EAAsBb,EAAKI,CAAM,EAE1E,OACEV,EAAC,OAAK,GAAGQ,EACP,UAAAT,EAAC,OAAI,UAAU,mCACb,SAAAA,EAACV,EAAA,CACC,eAAgByB,EAChB,uBAAwBE,EACxB,cAAeC,EACf,SAAUP,IAAWD,EAAYR,EAA8BC,GACjE,EACF,EACAF,EAAC,OAAI,UAAU,sBACb,UAAAD,EAACP,EAAA,CAAO,UAAU,SAAS,QAASoB,EACjC,SAAAF,EAAS,SAAW,QACvB,EACAX,EAACN,EAAA,CAAW,UAAU,kBAAkB,MAAO4B,EAAY,GAC7D,EACAtB,EAACL,EAAA,CACC,MAAO,CACL,CAAC,oBAAqB,wBAAwB,EAC9C,CAAC,aAAc,sBAAsB,EACrCe,EAAY,CAAC,WAAY,iBAAiB,EAAI,KAC9C,CAAC,IAAK,eAAe,CACvB,EACF,GACF,CAEJ,EAEMa,EAAsBd,GACnBT,EAACD,EAAA,CAAM,GAAGU,EAAO,SAAUJ,EAAU,EAGvCmB,EAAQD",
  "names": ["useCallback", "useState", "useDocumentKeypressListener", "usePressedKeys", "useRealTimeUpdate", "TEACHER_ACTOR_CLASS", "DPad", "useDPadPressedButtons", "DPAD_BUTTONS", "Button", "FpsCounter", "KeyboardControlList", "serializePlayerAction", "TEACHER_NOOP_ACTION", "Space", "Play", "jsx", "jsxs", "DEACTIVATED_BUTTONS_TEACHER", "DEACTIVATED_BUTTONS_PLAYER", "ACTION_SPACE", "Controls", "sendAction", "fps", "actorClass", "props", "isTeacher", "paused", "setPaused", "togglePause", "pressedKeys", "pressedButtons", "isButtonPressed", "setPressedButtons", "activeButtons", "setActiveButtons", "computeAndSendAction", "dt", "currentFps", "PlayGymLunarLander", "GymLunarLander_default"]
}
