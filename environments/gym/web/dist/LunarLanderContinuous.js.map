{
  "version": 3,
  "sources": ["../LunarLanderContinuous.jsx"],
  "sourcesContent": ["// Copyright 2023 AI Redefined Inc. <dev+cogment@ai-r.com>\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { useCallback, useState } from \"react\";\nimport {\n  Button,\n  DType,\n  FpsCounter,\n  Joystick,\n  KeyboardControlList,\n  OBSERVER_ACTOR_CLASS,\n  PlayObserver,\n  serializePlayerAction,\n  SimplePlay,\n  Space,\n  TEACHER_ACTOR_CLASS,\n  TEACHER_NOOP_ACTION,\n  useDocumentKeypressListener,\n  useJoystickState,\n  usePressedKeys,\n  useRealTimeUpdate,\n} from \"@cogment/cogment-verse\";\n\nconst ACTION_SPACE = new Space({\n  box: {\n    low: {\n      // Only the dtype and shape of the lower bound are used to serialize the action\n      dtype: DType.DTYPE_FLOAT32,\n      shape: [2],\n    },\n  },\n});\n\nexport const LunarLanderContinuousControls = ({ sendAction, fps = 20, actorParams, ...props }) => {\n  const actorClassName = actorParams?.className;\n\n  const isTeacher = actorClassName === TEACHER_ACTOR_CLASS;\n  const [paused, setPaused] = useState(false);\n  const togglePause = useCallback(() => setPaused((paused) => !paused), [setPaused]);\n  useDocumentKeypressListener(\"p\", togglePause);\n\n  const pressedKeys = usePressedKeys();\n  const { joystickPosition, isJoystickActive, setJoystickState } = useJoystickState();\n\n  const [isKeyboardActive, setKeyboardActive] = useState(false);\n\n  const computeAndSendAction = useCallback(\n    (dt) => {\n      if (isJoystickActive) {\n        sendAction(serializePlayerAction(ACTION_SPACE, [joystickPosition[1], -joystickPosition[0]]));\n        setKeyboardActive(false);\n        return;\n      }\n\n      let keyboardAction = null;\n      const fast = pressedKeys.has(\"Shift\");\n      if (pressedKeys.has(\"ArrowLeft\")) {\n        keyboardAction = [0, 0];\n        keyboardAction[1] = fast ? 1.0 : 0.75;\n      } else if (pressedKeys.has(\"ArrowRight\")) {\n        keyboardAction = [0, 0];\n        keyboardAction[1] = fast ? -1.0 : -0.75;\n      }\n\n      if (pressedKeys.has(\"ArrowDown\")) {\n        keyboardAction = keyboardAction || [0, 0];\n        keyboardAction[0] = fast ? 1 : 0.25;\n      }\n\n      if (keyboardAction != null) {\n        sendAction(serializePlayerAction(ACTION_SPACE, keyboardAction));\n        setKeyboardActive(true);\n        setJoystickState([-keyboardAction[1], keyboardAction[0]], false);\n        return;\n      }\n\n      if (isTeacher) {\n        sendAction(TEACHER_NOOP_ACTION);\n      } else {\n        sendAction(serializePlayerAction(ACTION_SPACE, [0, 0]));\n      }\n      setKeyboardActive(false);\n      setJoystickState([0, 0], false);\n    },\n    [isTeacher, pressedKeys, joystickPosition, isJoystickActive, setJoystickState, setKeyboardActive, sendAction]\n  );\n\n  const { currentFps } = useRealTimeUpdate(computeAndSendAction, fps, paused);\n\n  return (\n    <div {...props}>\n      <div className=\"flex flex-row p-5 justify-center\">\n        <Joystick\n          position={joystickPosition}\n          active={isJoystickActive}\n          onChange={setJoystickState}\n          disabled={paused || isKeyboardActive}\n        />\n      </div>\n      <div className=\"flex flex-row gap-1\">\n        <Button className=\"flex-1\" onClick={togglePause}>\n          {paused ? \"Resume\" : \"Pause\"}\n        </Button>\n        <FpsCounter className=\"flex-none w-fit\" value={currentFps} />\n      </div>\n      <KeyboardControlList\n        items={[\n          [\"Left/Right Arrows\", \"Fire left/right engine\"],\n          [\"Down Arrow\", \"Fire the main engine\"],\n          [\"Shift\", \"Maintain pressed for 100% power\"],\n          [\"p\", \"Pause/Unpause\"],\n        ]}\n      />\n    </div>\n  );\n};\n\nconst PlayLunarLanderContinuous = ({ actorParams, ...props }) => {\n  const actorClassName = actorParams?.className;\n\n  if (actorClassName === OBSERVER_ACTOR_CLASS) {\n    return <PlayObserver actorParams={actorParams} {...props} />;\n  }\n  return <SimplePlay actorParams={actorParams} {...props} controls={LunarLanderContinuousControls} />;\n};\n\nexport default PlayLunarLanderContinuous;\n"],
  "mappings": "AAcA,OAAS,eAAAA,EAAa,YAAAC,MAAgB,QACtC,OACE,UAAAC,EACA,SAAAC,EACA,cAAAC,EACA,YAAAC,EACA,uBAAAC,EACA,wBAAAC,EACA,gBAAAC,EACA,yBAAAC,EACA,cAAAC,EACA,SAAAC,EACA,uBAAAC,EACA,uBAAAC,EACA,+BAAAC,EACA,oBAAAC,EACA,kBAAAC,EACA,qBAAAC,MACK,yBAuEC,cAAAC,EAOF,QAAAC,MAPE,oBArER,IAAMC,EAAe,IAAIT,EAAM,CAC7B,IAAK,CACH,IAAK,CAEH,MAAOR,EAAM,cACb,MAAO,CAAC,CAAC,CACX,CACF,CACF,CAAC,EAEYkB,EAAgC,CAAC,CAAE,WAAAC,EAAY,IAAAC,EAAM,GAAI,YAAAC,EAAa,GAAGC,CAAM,IAAM,CAGhG,IAAMC,EAFiBF,GAAa,YAECZ,EAC/B,CAACe,EAAQC,CAAS,EAAI3B,EAAS,EAAK,EACpC4B,EAAc7B,EAAY,IAAM4B,EAAWD,GAAW,CAACA,CAAM,EAAG,CAACC,CAAS,CAAC,EACjFd,EAA4B,IAAKe,CAAW,EAE5C,IAAMC,EAAcd,EAAe,EAC7B,CAAE,iBAAAe,EAAkB,iBAAAC,EAAkB,iBAAAC,CAAiB,EAAIlB,EAAiB,EAE5E,CAACmB,EAAkBC,CAAiB,EAAIlC,EAAS,EAAK,EAEtDmC,EAAuBpC,EAC1BqC,GAAO,CACN,GAAIL,EAAkB,CACpBV,EAAWb,EAAsBW,EAAc,CAACW,EAAiB,CAAC,EAAG,CAACA,EAAiB,CAAC,CAAC,CAAC,CAAC,EAC3FI,EAAkB,EAAK,EACvB,OAGF,IAAIG,EAAiB,KACfC,EAAOT,EAAY,IAAI,OAAO,EAcpC,GAbIA,EAAY,IAAI,WAAW,GAC7BQ,EAAiB,CAAC,EAAG,CAAC,EACtBA,EAAe,CAAC,EAAIC,EAAO,EAAM,KACxBT,EAAY,IAAI,YAAY,IACrCQ,EAAiB,CAAC,EAAG,CAAC,EACtBA,EAAe,CAAC,EAAIC,EAAO,GAAO,MAGhCT,EAAY,IAAI,WAAW,IAC7BQ,EAAiBA,GAAkB,CAAC,EAAG,CAAC,EACxCA,EAAe,CAAC,EAAIC,EAAO,EAAI,KAG7BD,GAAkB,KAAM,CAC1BhB,EAAWb,EAAsBW,EAAckB,CAAc,CAAC,EAC9DH,EAAkB,EAAI,EACtBF,EAAiB,CAAC,CAACK,EAAe,CAAC,EAAGA,EAAe,CAAC,CAAC,EAAG,EAAK,EAC/D,OAIAhB,EADEI,EACSb,EAEAJ,EAAsBW,EAAc,CAAC,EAAG,CAAC,CAAC,CAFvB,EAIhCe,EAAkB,EAAK,EACvBF,EAAiB,CAAC,EAAG,CAAC,EAAG,EAAK,CAChC,EACA,CAACP,EAAWI,EAAaC,EAAkBC,EAAkBC,EAAkBE,EAAmBb,CAAU,CAC9G,EAEM,CAAE,WAAAkB,CAAW,EAAIvB,EAAkBmB,EAAsBb,EAAKI,CAAM,EAE1E,OACER,EAAC,OAAK,GAAGM,EACP,UAAAP,EAAC,OAAI,UAAU,mCACb,SAAAA,EAACb,EAAA,CACC,SAAU0B,EACV,OAAQC,EACR,SAAUC,EACV,SAAUN,GAAUO,EACtB,EACF,EACAf,EAAC,OAAI,UAAU,sBACb,UAAAD,EAAChB,EAAA,CAAO,UAAU,SAAS,QAAS2B,EACjC,SAAAF,EAAS,SAAW,QACvB,EACAT,EAACd,EAAA,CAAW,UAAU,kBAAkB,MAAOoC,EAAY,GAC7D,EACAtB,EAACZ,EAAA,CACC,MAAO,CACL,CAAC,oBAAqB,wBAAwB,EAC9C,CAAC,aAAc,sBAAsB,EACrC,CAAC,QAAS,iCAAiC,EAC3C,CAAC,IAAK,eAAe,CACvB,EACF,GACF,CAEJ,EAEMmC,EAA4B,CAAC,CAAE,YAAAjB,EAAa,GAAGC,CAAM,IAClCD,GAAa,YAEbjB,EACdW,EAACV,EAAA,CAAa,YAAagB,EAAc,GAAGC,EAAO,EAErDP,EAACR,EAAA,CAAW,YAAac,EAAc,GAAGC,EAAO,SAAUJ,EAA+B,EAG5FqB,EAAQD",
  "names": ["useCallback", "useState", "Button", "DType", "FpsCounter", "Joystick", "KeyboardControlList", "OBSERVER_ACTOR_CLASS", "PlayObserver", "serializePlayerAction", "SimplePlay", "Space", "TEACHER_ACTOR_CLASS", "TEACHER_NOOP_ACTION", "useDocumentKeypressListener", "useJoystickState", "usePressedKeys", "useRealTimeUpdate", "jsx", "jsxs", "ACTION_SPACE", "LunarLanderContinuousControls", "sendAction", "fps", "actorParams", "props", "isTeacher", "paused", "setPaused", "togglePause", "pressedKeys", "joystickPosition", "isJoystickActive", "setJoystickState", "isKeyboardActive", "setKeyboardActive", "computeAndSendAction", "dt", "keyboardAction", "fast", "currentFps", "PlayLunarLanderContinuous", "LunarLanderContinuous_default"]
}
