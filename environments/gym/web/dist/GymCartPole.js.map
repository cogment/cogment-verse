{
  "version": 3,
  "sources": ["../GymCartPole.jsx"],
  "sourcesContent": ["// Copyright 2023 AI Redefined Inc. <dev+cogment@ai-r.com>\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport React, { useCallback, useState } from \"react\";\nimport {\n  useDocumentKeypressListener,\n  usePressedKeys,\n  PlayObserver,\n  useRealTimeUpdate,\n  TEACHER_ACTOR_CLASS,\n  OBSERVER_ACTOR_CLASS,\n  Button,\n  FpsCounter,\n  KeyboardControlList,\n  serializePlayerAction,\n  TEACHER_NOOP_ACTION,\n  Space,\n  SimplePlay,\n} from \"@cogment/cogment-verse\";\n\nconst ACTION_SPACE = new Space({\n  discrete: {\n    n: 2,\n  },\n});\n\nconst CartPoleControls = ({ sendAction, fps = 30, actorParams, ...props }) => {\n  const actorClassName = actorParams?.className;\n\n  const [paused, setPaused] = useState(true);\n  const togglePause = useCallback(() => setPaused((paused) => !paused), [setPaused]);\n  useDocumentKeypressListener(\"p\", togglePause);\n\n  const pressedKeys = usePressedKeys();\n\n  const computeAndSendAction = useCallback(\n    (dt) => {\n      if (pressedKeys.size === 0 && actorClassName === TEACHER_ACTOR_CLASS) {\n        sendAction(TEACHER_NOOP_ACTION);\n        return;\n      }\n\n      if (pressedKeys.has(\"ArrowLeft\")) {\n        sendAction(serializePlayerAction(ACTION_SPACE, 0));\n        return;\n      } else if (pressedKeys.has(\"ArrowRight\")) {\n        sendAction(serializePlayerAction(ACTION_SPACE, 1));\n        return;\n      }\n\n      // Default action is left\n      sendAction(serializePlayerAction(ACTION_SPACE, 0));\n    },\n    [pressedKeys, sendAction, actorClassName]\n  );\n\n  const { currentFps } = useRealTimeUpdate(computeAndSendAction, fps, paused);\n\n  return (\n    <div {...props}>\n      <div className=\"flex flex-row gap-1\">\n        <Button className=\"flex-1\" onClick={togglePause}>\n          {paused ? \"Resume\" : \"Pause\"}\n        </Button>\n        <FpsCounter className=\"flex-none w-fit\" value={currentFps} />\n      </div>\n      <KeyboardControlList\n        items={[\n          [\"Left/Right Arrows\", \"push cart to the left/right\"],\n          [\"p\", \"Pause/Unpause\"],\n        ]}\n      />\n    </div>\n  );\n};\n\nconst PlayCartPole = ({ actorParams, ...props }) => {\n  const actorClassName = actorParams?.className;\n\n  if (actorClassName === OBSERVER_ACTOR_CLASS) {\n    return <PlayObserver actorParams={actorParams} {...props} />;\n  }\n  return <SimplePlay actorParams={actorParams} {...props} controls={CartPoleControls} />;\n};\n\nexport default PlayCartPole;\n"],
  "mappings": "AAcA,OAAgB,eAAAA,EAAa,YAAAC,MAAgB,QAC7C,OACE,+BAAAC,EACA,kBAAAC,EACA,gBAAAC,EACA,qBAAAC,EACA,uBAAAC,EACA,wBAAAC,EACA,UAAAC,EACA,cAAAC,EACA,uBAAAC,EACA,yBAAAC,EACA,uBAAAC,EACA,SAAAC,EACA,cAAAC,MACK,yBA0CD,OACE,OAAAC,EADF,QAAAC,MAAA,oBAxCN,IAAMC,EAAe,IAAIJ,EAAM,CAC7B,SAAU,CACR,EAAG,CACL,CACF,CAAC,EAEKK,EAAmB,CAAC,CAAE,WAAAC,EAAY,IAAAC,EAAM,GAAI,YAAAC,EAAa,GAAGC,CAAM,IAAM,CAC5E,IAAMC,EAAiBF,GAAa,UAE9B,CAACG,EAAQC,CAAS,EAAIxB,EAAS,EAAI,EACnCyB,EAAc1B,EAAY,IAAMyB,EAAWD,GAAW,CAACA,CAAM,EAAG,CAACC,CAAS,CAAC,EACjFvB,EAA4B,IAAKwB,CAAW,EAE5C,IAAMC,EAAcxB,EAAe,EAE7ByB,EAAuB5B,EAC1B6B,GAAO,CACN,GAAIF,EAAY,OAAS,GAAKJ,IAAmBjB,EAAqB,CACpEa,EAAWP,CAAmB,EAC9B,OAGF,GAAIe,EAAY,IAAI,WAAW,EAAG,CAChCR,EAAWR,EAAsBM,EAAc,CAAC,CAAC,EACjD,eACSU,EAAY,IAAI,YAAY,EAAG,CACxCR,EAAWR,EAAsBM,EAAc,CAAC,CAAC,EACjD,OAIFE,EAAWR,EAAsBM,EAAc,CAAC,CAAC,CACnD,EACA,CAACU,EAAaR,EAAYI,CAAc,CAC1C,EAEM,CAAE,WAAAO,CAAW,EAAIzB,EAAkBuB,EAAsBR,EAAKI,CAAM,EAE1E,OACER,EAAC,OAAK,GAAGM,EACP,UAAAN,EAAC,OAAI,UAAU,sBACb,UAAAD,EAACP,EAAA,CAAO,UAAU,SAAS,QAASkB,EACjC,SAAAF,EAAS,SAAW,QACvB,EACAT,EAACN,EAAA,CAAW,UAAU,kBAAkB,MAAOqB,EAAY,GAC7D,EACAf,EAACL,EAAA,CACC,MAAO,CACL,CAAC,oBAAqB,6BAA6B,EACnD,CAAC,IAAK,eAAe,CACvB,EACF,GACF,CAEJ,EAEMqB,EAAe,CAAC,CAAE,YAAAV,EAAa,GAAGC,CAAM,IACrBD,GAAa,YAEbd,EACdQ,EAACX,EAAA,CAAa,YAAaiB,EAAc,GAAGC,EAAO,EAErDP,EAACD,EAAA,CAAW,YAAaO,EAAc,GAAGC,EAAO,SAAUJ,EAAkB,EAG/Ec,EAAQD",
  "names": ["useCallback", "useState", "useDocumentKeypressListener", "usePressedKeys", "PlayObserver", "useRealTimeUpdate", "TEACHER_ACTOR_CLASS", "OBSERVER_ACTOR_CLASS", "Button", "FpsCounter", "KeyboardControlList", "serializePlayerAction", "TEACHER_NOOP_ACTION", "Space", "SimplePlay", "jsx", "jsxs", "ACTION_SPACE", "CartPoleControls", "sendAction", "fps", "actorParams", "props", "actorClassName", "paused", "setPaused", "togglePause", "pressedKeys", "computeAndSendAction", "dt", "currentFps", "PlayCartPole", "GymCartPole_default"]
}
