// Copyright 2021 AI Redefined Inc. <dev+cogment@ai-r.com>
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//    http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package cogment_verse.run;

import "google/protobuf/timestamp.proto";

enum RunStatus {
  UNKNOWN = 0;
  RUNNING = 1;
  TERMINATED = 2;
  SUCCESS = 3;
  ERROR = 4;
}

message RunConfig {
  bytes content = 1;
}

message RunParams {
  string name = 1;
  string implementation = 2;
  RunConfig config = 3;
}

message RunInfo {
  string run_id = 1;
  string params_name = 2;
  string implementation = 3;
  google.protobuf.Timestamp start_timestamp = 4;
  RunStatus status = 5;
  uint64 steps_count = 6;
}

service Run {
  rpc StartRun(StartRunRequest) returns (StartRunReply) {}
  rpc ListRuns(ListRunsRequest) returns (ListRunsReply) {}
  rpc TerminateRun(TerminateRunRequest) returns (TerminateRunReply) {}
}

message StartRunRequest {
  RunParams run_params = 1;
  string run_id = 2;
}

message StartRunReply {
  RunInfo run = 1;
}

message ListRunsRequest {
}

message ListRunsReply{
  repeated RunInfo runs = 1;
}

message TerminateRunRequest {
  string run_id = 1;
}

message TerminateRunReply {
  RunInfo run = 1;
}
